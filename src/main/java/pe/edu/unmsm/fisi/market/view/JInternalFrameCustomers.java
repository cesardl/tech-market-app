/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

 /*
 * JInternalFrameCustomers.java
 *
 * Created on 24/06/2009, 08:47:18 PM
 */
package pe.edu.unmsm.fisi.market.view;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import pe.edu.unmsm.fisi.market.business.impl.CustomerBusiness;
import pe.edu.unmsm.fisi.market.model.Customer;

import java.util.Collection;

/**
 *
 * @author Eliana Zapata
 */
public class JInternalFrameCustomers extends javax.swing.JInternalFrame {

    private static final long serialVersionUID = -8655880407433397905L;

    private static final Logger LOG = LoggerFactory.getLogger(JInternalFrameCustomers.class);

    private final CustomerBusiness customerBusiness;
    
    /**
     * Creates new form JInternalFrameInsertar
     */
    public JInternalFrameCustomers() {
        customerBusiness = CustomerBusiness.getInstance();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.JPanel panel = new javax.swing.JPanel();
        javax.swing.JScrollPane scrollPane = new javax.swing.JScrollPane();
        tableData = new javax.swing.JTable();
        buttonAdd = new javax.swing.JButton();
        javax.swing.JLabel labelTotal = new javax.swing.JLabel();
        labelTotalRows = new javax.swing.JLabel();

        setClosable(true);
        setTitle("Customers");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/img/apache_derby.png"))); // NOI18N

        panel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tableData.setModel(new javax.swing.table.DefaultTableModel(
            new String [] {
                "Id", "Name", "City", "Email"
            }, 0
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableData.getTableHeader().setReorderingAllowed(false);
        scrollPane.setViewportView(tableData);

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(scrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 742, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 292, Short.MAX_VALUE)
            .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(scrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 266, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        buttonAdd.setText("New customer");

        labelTotal.setText("Total:");

        labelTotalRows.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelTotalRows.setText("0");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(buttonAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 625, Short.MAX_VALUE)
                        .addComponent(labelTotal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelTotalRows)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(buttonAdd)
                    .addComponent(labelTotal)
                    .addComponent(labelTotalRows))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public void setVisible(boolean b) {
        if (b) {
            refreshDataTable(customerBusiness.obtenerTodos());
        }

        super.setVisible(b); //To change body of generated methods, choose Tools | Templates.
    }

    private void refreshDataTable(Collection<Customer> customers) {
        javax.swing.table.DefaultTableModel dtm = (javax.swing.table.DefaultTableModel) tableData.getModel();

        int rowCount = dtm.getRowCount();
        //Remove rows one by one from the end of the table
        for (int i = rowCount - 1; i >= 0; i--) {
            dtm.removeRow(i);
        }

        customers.forEach(c -> {
            Object[] rowData = {
                    c.getCustomerId(), c.getName(), c.getCity(), c.getEmail()
            };
            dtm.addRow(rowData);
        });
        labelTotalRows.setText(String.valueOf(customers.size()));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAdd;
    private javax.swing.JLabel labelTotalRows;
    private javax.swing.JTable tableData;
    // End of variables declaration//GEN-END:variables
}
