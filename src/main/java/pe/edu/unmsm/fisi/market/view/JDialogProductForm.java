/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pe.edu.unmsm.fisi.market.view;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import pe.edu.unmsm.fisi.market.business.ProductBusiness;
import pe.edu.unmsm.fisi.market.model.Manufacturer;
import pe.edu.unmsm.fisi.market.model.Product;
import pe.edu.unmsm.fisi.market.model.ProductCode;
import pe.edu.unmsm.fisi.market.util.AppUtils;

/**
 * @author Cesardl
 */
public class JDialogProductForm extends javax.swing.JDialog {

    private static final Logger LOG = LoggerFactory.getLogger(JDialogProductForm.class);

    private final Product product;
    private final ProductBusiness productBusiness;

    /**
     * @inheritDoc
     */
    public JDialogProductForm(java.awt.Frame parent, Product product) {
        super(parent);

        productBusiness = ProductBusiness.getInstance();
        this.product = product;

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.JPanel panel = new javax.swing.JPanel();
        javax.swing.JLabel labelManufacturer = new javax.swing.JLabel();
        javax.swing.JLabel labelProductId = new javax.swing.JLabel();
        javax.swing.JLabel labelTipo = new javax.swing.JLabel();
        javax.swing.JLabel labelDescription = new javax.swing.JLabel();
        javax.swing.JLabel labelPrecUnit = new javax.swing.JLabel();
        javax.swing.JLabel labelCantidad = new javax.swing.JLabel();
        comboBoxManufacturer = new javax.swing.JComboBox<>();
        textFieldProductId = new javax.swing.JTextField();
        comboBoxProductCode = new javax.swing.JComboBox<>();
        textFieldDescription = new javax.swing.JTextField();
        textFieldPrecUnit = new javax.swing.JTextField();
        spinnerCantidad = new javax.swing.JSpinner();
        javax.swing.JButton jButtonSave = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Detalle de Producto");
        setIconImage(new javax.swing.ImageIcon(getClass().getResource("/img/apache_derby.png")).getImage());
        setModal(true);
        setResizable(false);

        panel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        labelManufacturer.setText("Manufacturer");

        labelProductId.setText("Codigo");

        labelTipo.setText("Tipo");

        labelDescription.setText("Descripcion");

        labelPrecUnit.setText("Precio Unitario");

        labelCantidad.setText("Cantidad");

        comboBoxManufacturer.setFocusable(false);

        textFieldProductId.setEnabled(false);

        comboBoxProductCode.setFocusable(false);

        spinnerCantidad.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelTipo)
                    .addComponent(labelManufacturer)
                    .addComponent(labelProductId)
                    .addComponent(labelDescription)
                    .addComponent(labelPrecUnit))
                .addGap(18, 18, 18)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(spinnerCantidad)
                    .addComponent(textFieldPrecUnit)
                    .addComponent(textFieldDescription)
                    .addComponent(comboBoxProductCode, 0, 269, Short.MAX_VALUE)
                    .addComponent(textFieldProductId)
                    .addComponent(comboBoxManufacturer, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(panelLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(labelCantidad)
                .addContainerGap(323, Short.MAX_VALUE))
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelManufacturer)
                    .addComponent(comboBoxManufacturer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(labelProductId)
                    .addComponent(textFieldProductId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(comboBoxProductCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelTipo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(textFieldDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelDescription))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(textFieldPrecUnit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelPrecUnit))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(spinnerCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelCantidad))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        textFieldDescription.requestFocus();

        jButtonSave.setText("Guardar");
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonSave)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonSave)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public void setVisible(boolean b) {
        if (b) {
        comboBoxManufacturer.setModel(
                new javax.swing.DefaultComboBoxModel<>(
                        new java.util.Vector<>(productBusiness.getManufacturers())));

        comboBoxProductCode.setModel(
                new javax.swing.DefaultComboBoxModel<>(
                        new java.util.Vector<>(productBusiness.getProductCodes())));

        if (product.getProductId() != null) {
            showData();
        }
        }
        super.setVisible(b); //To change body of generated methods, choose Tools | Templates.
    }

    private void showData() {
        for (int index = 0; index < comboBoxManufacturer.getItemCount(); index++) {
            Manufacturer m = comboBoxManufacturer.getItemAt(index);
            if (m.getManufacturerId().equals(product.getManufacturer().getManufacturerId())) {
                comboBoxManufacturer.setSelectedItem(m);
                break;
            }
        }

        textFieldProductId.setText(String.valueOf(product.getProductId()));

        for (int index = 0; index < comboBoxProductCode.getItemCount(); index++) {
            ProductCode pc = comboBoxProductCode.getItemAt(index);
            if (pc.getProdCode().equals(product.getProductCode().getProdCode())) {
                comboBoxProductCode.setSelectedItem(pc);
                break;
            }
        }

        textFieldDescription.setText(product.getDescription());
        textFieldPrecUnit.setText(String.valueOf(product.getPurchaseCost()));
        spinnerCantidad.setValue(product.getQuantityOnHand());
    }

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
        LOG.trace(evt.paramString());
        if (capturaDatos()) {
            if (productBusiness.saveOrUpdateProduct(product)) {
                javax.swing.JOptionPane.showMessageDialog(this,
                        "Se agrego el producto correctamente!",
                        getTitle(), javax.swing.JOptionPane.INFORMATION_MESSAGE);
                dispose();
            } else {
                javax.swing.JOptionPane.showMessageDialog(this,
                        "No se puede agregar el producto!\nCodigo repetido!",
                        getTitle(), javax.swing.JOptionPane.ERROR_MESSAGE);
                AppUtils.marcarTextField(textFieldProductId);
            }
        } else {
            javax.swing.JOptionPane.showMessageDialog(this,
                    "Ingrese correctamente los datos",
                    getTitle(), javax.swing.JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jButtonSaveActionPerformed

    private boolean capturaDatos() {
        String description = textFieldDescription.getText().trim();
        double purchaseCost = AppUtils.toDouble(textFieldPrecUnit.getText().trim());
        int quantityOnHand = AppUtils.toInteger(String.valueOf(spinnerCantidad.getValue()));

        if (description.length() == 0) {
            AppUtils.marcarTextField(textFieldDescription);
            return false;
        }
        if (purchaseCost == AppUtils.ERROR_NUMBER) {
            AppUtils.marcarTextField(textFieldPrecUnit);
            return false;
        }
        if (quantityOnHand == AppUtils.ERROR_NUMBER) {
            spinnerCantidad.requestFocus();
            return false;
        }

        product.setManufacturer(comboBoxManufacturer.getItemAt(comboBoxManufacturer.getSelectedIndex()));
        product.setProductCode(comboBoxProductCode.getItemAt(comboBoxProductCode.getSelectedIndex()));
        product.setPurchaseCost(purchaseCost);
        product.setQuantityOnHand(quantityOnHand);
        product.setDescription(description);
        return true;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<Manufacturer> comboBoxManufacturer;
    private javax.swing.JComboBox<ProductCode> comboBoxProductCode;
    private javax.swing.JSpinner spinnerCantidad;
    private javax.swing.JTextField textFieldDescription;
    private javax.swing.JTextField textFieldPrecUnit;
    private javax.swing.JTextField textFieldProductId;
    // End of variables declaration//GEN-END:variables
}
